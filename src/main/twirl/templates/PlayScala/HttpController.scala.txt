@(service: akka.grpc.gen.scaladsl.Service, methods: Vector[play.grpc.gen.scaladsl.GrpcMethodInfo], context0: String)

// Generated by Play gRPC Gateway. Generates every time we build the project. DO NOT EDIT.
package @service.packageName

import scala.concurrent.{ExecutionContext, Future}

import play.api.mvc._
import javax.inject.Inject
import com.typesafe.config.Config

import @{service.packageName}._

@defining(service.name) { serviceName =>

class @{serviceName}Controller @@Inject()(config: Config, context: @{context0})(implicit ec: ExecutionContext) extends InjectedController {
  @for(e <- methods) {
    def @{e.name} (@{e.inputType}) = Action.async { implicit req =>
      @if(e.inputType.nonEmpty) {
        context.@{e.name}(@{e.inputType})
      }
      @if(e.inputType.isEmpty) {
        context.@{e.name}()
      }
    }
  }
}
}
